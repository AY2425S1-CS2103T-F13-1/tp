plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'application'
    id 'jacoco'
}

mainClassName = 'seedu.address.Main'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

checkstyle {
    toolVersion = '10.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

task coverage(type: JacocoReport) {
    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)
    classDirectories.from files(sourceSets.main.output)
    executionData.from files(jacocoTestReport.executionData)
    afterEvaluate {
        classDirectories.from files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*.jar'])
        })
    }
    reports {
        html.required = true
        xml.required = true
    }
}

dependencies {
    String jUnitVersion = '5.4.0'
    String javaFxVersion = '17.0.7'

    // JavaFX dependencies for specific platforms
    def platforms = ['win', 'linux', 'mac-aarch64']
    def javafxModules = ['base', 'controls', 'fxml', 'graphics', 'web', 'media']  // Added 'media'

    platforms.each { platform ->
        javafxModules.each { module ->
            implementation "org.openjfx:javafx-${module}:${javaFxVersion}:${platform}"
        }
    }

    // CommonMark library for rendering Markdown
    implementation 'org.commonmark:commonmark:0.17.2'

    // Other dependencies
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.4'

    // JUnit dependencies
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: jUnitVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: jUnitVersion
}

shadowJar {
    archiveFileName = 'tahub.jar'
    mergeServiceFiles()
}

run {
    enableAssertions = true
    jvmArgs += [
            '--module-path', configurations.runtimeClasspath.asPath,
            '--add-modules', 'javafx.controls,javafx.fxml,javafx.web,javafx.media'  // Added 'javafx.media'
    ]
}
